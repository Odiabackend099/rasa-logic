version: '3.8'

services:
  # Node.js Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - RASA_SERVER_URL=http://rasa-server:5005
      - ACTION_SERVER_URL=http://rasa-actions:5055
    env_file:
      - ./backend/.env
    depends_on:
      - rasa-server
      - rasa-actions
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Rasa Server (Ultra-lightweight)
  rasa-server:
    build:
      context: ./rasa-agent
      dockerfile: Dockerfile.server
    ports:
      - "5005:5005"
    environment:
      - PORT=5005
      - TF_CPP_MIN_LOG_LEVEL=3
      - RASA_MAX_TRAINING_PROCESSES=1
      - OMP_NUM_THREADS=1
      - OPENBLAS_NUM_THREADS=1
      - MKL_NUM_THREADS=1
      - RASA_TELEMETRY_ENABLED=false
      - ACTION_SERVER_URL=http://rasa-actions:5055
    depends_on:
      - rasa-actions
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Rasa Actions Server
  rasa-actions:
    build:
      context: ./rasa-agent
      dockerfile: Dockerfile.actions
    ports:
      - "5055:5055"
    environment:
      - PORT=5055
    env_file:
      - ./backend/.env
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5055/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rasa_models:
    driver: local